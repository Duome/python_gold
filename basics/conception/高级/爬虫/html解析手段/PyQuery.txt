安装————

	pip install pyquery -i https://pypi.douban.com/simple
	
本质————

	使用jQuery语法对xml进行操作，还不可以和js交互，和jQuery API相似
	相比BS XPath 可以进行二次筛选
	
初始化————
	
	直接字符串——
		from pyquery import PyQuery as pq
		doc = pq('<html></html>')
		ps: pq参数可以直接传入HTML代码，doc相当与jQuery中的$
	lxml.etree——
		from lxml import etree
		doc = pq(etree.fromstring('<html></html>'))
		ps: 用etree处理代码，保证HTML代码完整
	直接传URL——
		doc = pq('http://www.baidu.com')
	传文件——
		doc = pq(filename='hello.html')
		
一般操作————

	from pyquery import PyQuery ad pq
	doc = pq(filename='hello.html')
	print doc.html()	# 显示html
	print type(doc)		# 类型为PyQuery
	li = doc('li')
	print type(li)		# 类型为PyQuery
	print li.text()		# 显示li标签的内容

属性操作————
	
	from pyquery import PyQuery as pq
	p = pq('<p id="hello" class="hello"></p>')('p')
	
	# 获取属性
	print p.attr("id")
	
	# 修改属性
	print p.attr("id", "plop")
	print p.attr("class", "hell")

	# 添加删除class
	print p.addClass('beauty')    # class属性为hello和beauty
	print p.removeClass('beauty')
	
	# 添加修改css
	print p.css('font-size', '16px')	# 添加
	print p.css({'font-size': '16px'})	
	print p.css('font-size', '18px')	# 修改
	print p.css({'font-size': '19px'})
	
DOM操作————

	p = pq('<p id="hello" class="hello"></p>')('p')
	
	# 标签内加入元素
	print p.append(' check out <a href="http://reddit.com/r/python"><span>reddit</span></a>')
	
	# 标签内容前加入元素
	print p.prepend('Oh yes!')
	
	# 内容加入标签中
	d = pq('<div class="wrap"><div id="test"><a href="http://cuiqingcai.com">Germy</a></div></div>')
	p.prependTo(d('#test'))
	print p
	print d
	
	# 删除标签内容
	d.empty()
	print d
	
遍历————
		
	items——
		from pyquery import PyQuery as pq
		doc = pq(filename='hello.html')
		lis = doc('li')
		for li in lis.items():		# 遍历所有li标签
			print li.html()			# 显示当前li标签的html
			
	lambda——	 
		print lis.each(lambda e: e)
	
	ps: items没有包含li标签，即li标签的内容，lambda包含li标签

网页请求————

	print pq('http://cuiqingcai.com/', headers={'user-agent': 'pyquery'})
	print pq('http://httpbin.org/post', {'foo': 'bar'}, method='post', verify=True)
	
Ajax————

API————	
	
	
	
	
	
	
	
	
	
	
	
	
		