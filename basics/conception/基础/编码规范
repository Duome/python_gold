编码规范

分号————
    NO  用分号将两条命令放在同一行

行长度————
    NO  用反斜杠连接行
    YES 用圆括号连接行
    YES 将长URL放在一行，长的导入模块语句放在一行

括号————
    NO  在返回语句return或条件语句if中使用括号

缩进————
    YES 4个空格
    YES 与起始变量对齐
    YES 字典中与起始值对齐
    YES 第一行不需要4个空格缩进

空行————
    YES 顶级定义空两行（函数，类和top函数定义之间）
    YES 方法定义空一行（类方法之间，函数或方法中）

空格————
    NO  括号内空格
    NO  逗号、分号、冒号前加空格
    YES 逗号、分号、冒号后加空格
    NO  列表、索引、切片左括号前加空格
    YES 二元操作符两边都加空格（==,<,>,!=,<=,>=,in,not in,is,is not）
    NO  '='指示关键字参数、默认参数值两侧加空格
    NO  用空格垂直多对齐（:,#,=）

注释————
    YES 函数需要有文档字符串注释（包含函数做什么，输入，输出，不描述怎么做）
        ps: Args:
            列出每个参数的名字, 并在名字后使用一个冒号和一个空格, 分隔对该参数的描述.如果描述太长超过了单行80字符,使用2或者4个空格的悬挂缩进(与文件其他部分保持一致). 描述应该包括所需的类型和含义. 如果一个函数接受*foo(可变长度参数列表)或者**bar (任意关键字参数), 应该详细列出*foo和**bar.
            Returns: (或者 Yields: 用于生成器)
            描述返回值的类型和语义. 如果函数返回None, 这一部分可以省略.
            Raises:
            列出与接口有关的所有异常.
    YES 类需要有文档字符串注释（和函数一致）
        ps: 若文档中有公共属性（Attributes），注释中有（Attributes）段
    YES 注释至少离开代码两个空格
    YES 首字母大写，尽量使用英文

字符串————
    NO  在循环中用+和+=操作符来累加字符串
    YES 将元素加入列表，循环后用join连接列表
    YES 保持使用字符串引号的一致性（单引号）

文件————
    YES 使用with语句管理文件
    YES 使用contextlib.closing()对不支持with的对象
        ps: with contextlib.closing(urllib.urlopen("htto://www.python.org/")) as f:

导入格式————
    YES 每个导入独占一行（导入顺序：最通用-最不通用）
        ps: 标准库导入——第三方库导入——应用程序制定导入

语句————
    YES 在if语句没有else时，可以将语句与结果放在同一行
    NO  try\except放在同一行

命名————
    YES 计数器和迭代器使用单字符名称（其他不行）
    NO  包/模块名中连字符（_），英文都是小写
    NO  双下划线开头结尾的名称
        ps: 单下划线_开头——变量或函数受保护的
            双下划线__开头——变量或方法类内私有

Main————
    YES if __name__ == '__main__':当模块被导入时主程序不会执行

异常————
    YES 获取异常使用as

判断————
    YES 使用隐式的false（使用if a而不是if a !=）
    NO  使用==或！=比较单件（使用is或者is not）

其他————
    YES 用startswith() & endswith()代替切片进行序列前缀或后缀检查
        ps: foo = 'bareeee'
            if foo.startswith('bar')优于
            if foo[:3] == 'bar'
    YES 用isinstance()比较对象类型
        ps: if isinstance(obj, int)
    YES 区分false和None使用if not x and x is not None
    YES 使用if not seq代替if not len(seq)，空序列是false
